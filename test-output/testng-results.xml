<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="61" passed="61">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="687" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:38Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="687" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:38Z">
      <class name="by.epam.javatraining.halavin.taskone.test.LibraryMethosTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.LibraryMethosTest@193948d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="AddToFileTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.LibraryMethosTest@193948d]" name="AddToFileTest" duration-ms="47" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToFileTest -->
        <test-method status="PASS" signature="AddToFileTestException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.LibraryMethosTest@193948d]" name="AddToFileTestException" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[Shape is empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: Shape is empty
at by.epam.javatraining.halavin.taskone.lib.service.ConeLibraryService.addShape(ConeLibraryService.java:16)
at by.epam.javatraining.halavin.taskone.test.LibraryMethosTest.AddToFileTestException(LibraryMethosTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToFileTestException -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.LibraryMethosTest -->
      <class name="by.epam.javatraining.halavin.taskone.test.SystemTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="addShapeToFileCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="addShapeToFileCommandTest" duration-ms="141" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShapeToFileCommandTest -->
        <test-method status="PASS" signature="isFigureCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="isFigureCommandTest" duration-ms="15" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFigureCommandTest -->
        <test-method status="PASS" signature="isCoorPlaneCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="isCoorPlaneCommandTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCoorPlaneCommandTest -->
        <test-method status="PASS" signature="spaceRatioCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="spaceRatioCommandTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spaceRatioCommandTest -->
        <test-method status="PASS" signature="squareCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="squareCommandTest" duration-ms="16" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squareCommandTest -->
        <test-method status="PASS" signature="spaceCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="spaceCommandTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- spaceCommandTest -->
        <test-method status="PASS" signature="wrongCommandTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.SystemTest@1604f19]" name="wrongCommandTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongCommandTest -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.SystemTest -->
      <class name="by.epam.javatraining.halavin.taskone.test.DotTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="dotEqualsTestFalse()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotEqualsTestFalse" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotEqualsTestFalse -->
        <test-method status="PASS" signature="dotCopyConstructorTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotCopyConstructorTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotCopyConstructorTest -->
        <test-method status="PASS" signature="dotGetXTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotGetXTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotGetXTest -->
        <test-method status="PASS" signature="dotGetZTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotGetZTest" duration-ms="16" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotGetZTest -->
        <test-method status="PASS" signature="dotGetYTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotGetYTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotGetYTest -->
        <test-method status="PASS" signature="dotEqualsTestTrue()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotEqualsTestTrue" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotEqualsTestTrue -->
        <test-method status="PASS" signature="dotHashCodeTestFalse()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotHashCodeTestFalse" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotHashCodeTestFalse -->
        <test-method status="PASS" signature="dotHashCodeTestTrue()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotHashCodeTestTrue" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotHashCodeTestTrue -->
        <test-method status="PASS" signature="dotParameterConstructorTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotParameterConstructorTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotParameterConstructorTest -->
        <test-method status="PASS" signature="dotToString()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotToString" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotToString -->
        <test-method status="PASS" signature="dotSetZTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotSetZTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotSetZTest -->
        <test-method status="PASS" signature="dotSetYTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotSetYTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotSetYTest -->
        <test-method status="PASS" signature="dotSetXTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.DotTest@23a2f9]" name="dotSetXTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotSetXTest -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.DotTest -->
      <class name="by.epam.javatraining.halavin.taskone.test.ValidatorTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ValidatorTest@c0edeb]" name="beforeClass" is-config="true" duration-ms="15" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="validatorConeTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ValidatorTest@c0edeb]" name="validatorConeTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatorConeTest -->
        <test-method status="PASS" signature="validatorConeNegTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ValidatorTest@c0edeb]" name="validatorConeNegTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatorConeNegTest -->
        <test-method status="PASS" signature="validatorDotNegTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ValidatorTest@c0edeb]" name="validatorDotNegTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatorDotNegTest -->
        <test-method status="PASS" signature="validatorDotTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ValidatorTest@c0edeb]" name="validatorDotTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatorDotTest -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.ValidatorTest -->
      <class name="by.epam.javatraining.halavin.taskone.test.ConeTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="beforeClass" is-config="true" duration-ms="110" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="coneCopyConstructorTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneCopyConstructorTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneCopyConstructorTest -->
        <test-method status="PASS" signature="coneEqualsTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneEqualsTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneEqualsTest -->
        <test-method status="PASS" signature="coneGetCentreDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetCentreDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetCentreDot -->
        <test-method status="PASS" signature="coneGetForming()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetForming" duration-ms="15" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetForming -->
        <test-method status="PASS" signature="coneGetCentreDotException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetCentreDotException" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have centre dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have centre dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getCentreDot(Cone.java:70)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetCentreDotException(ConeTest.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetCentreDotException -->
        <test-method status="PASS" signature="coneGetFormingWithoutTop()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetFormingWithoutTop" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getForming(Cone.java:85)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetFormingWithoutTop(ConeTest.java:243)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetFormingWithoutTop -->
        <test-method status="PASS" signature="coneGetFormingWithoutRad()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetFormingWithoutRad" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have radius dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have radius dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getForming(Cone.java:82)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetFormingWithoutRad(ConeTest.java:255)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetFormingWithoutRad -->
        <test-method status="PASS" signature="coneGetHeightTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetHeightTest" duration-ms="16" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetHeightTest -->
        <test-method status="PASS" signature="coneGetRadDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetRadDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetRadDot -->
        <test-method status="PASS" signature="coneGetHeightTestWithoutTop()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetHeightTestWithoutTop" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have top dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have top dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getHeight(Cone.java:103)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetHeightTestWithoutTop(ConeTest.java:197)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetHeightTestWithoutTop -->
        <test-method status="PASS" signature="coneGetRadDotException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetRadDotException" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have radius dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have radius dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getRadDot(Cone.java:118)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetRadDotException(ConeTest.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetRadDotException -->
        <test-method status="PASS" signature="coneGetRadiusTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetRadiusTest" duration-ms="15" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetRadiusTest -->
        <test-method status="PASS" signature="coneGetHeightTestWithoutCentre()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetHeightTestWithoutCentre" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have centre dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have centre dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getHeight(Cone.java:100)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetHeightTestWithoutCentre(ConeTest.java:187)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetHeightTestWithoutCentre -->
        <test-method status="PASS" signature="coneGetRadiusTestWhithoutCentre()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetRadiusTestWhithoutCentre" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have centre dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have centre dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getRadius(Cone.java:53)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetRadiusTestWhithoutCentre(ConeTest.java:213)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetRadiusTestWhithoutCentre -->
        <test-method status="PASS" signature="coneGetRadiusTestWhithoutRad()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetRadiusTestWhithoutRad" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have radius dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have radius dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getRadius(Cone.java:56)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetRadiusTestWhithoutRad(ConeTest.java:224)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetRadiusTestWhithoutRad -->
        <test-method status="PASS" signature="coneGetTopDotException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetTopDotException" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException">
            <message>
              <![CDATA[Cone doesn't have top dot]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException: Cone doesn't have top dot
at by.epam.javatraining.halavin.taskone.lib.bean.Cone.getTopDot(Cone.java:41)
at by.epam.javatraining.halavin.taskone.test.ConeTest.coneGetTopDotException(ConeTest.java:123)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.bean.exception.BeanException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetTopDotException -->
        <test-method status="PASS" signature="coneHashCodeTestFalse()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneHashCodeTestFalse" duration-ms="31" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneHashCodeTestFalse -->
        <test-method status="PASS" signature="coneGetTopDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneGetTopDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneGetTopDot -->
        <test-method status="PASS" signature="coneHashCodeTestTrue()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneHashCodeTestTrue" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneHashCodeTestTrue -->
        <test-method status="PASS" signature="coneToStringTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneToStringTest" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneToStringTest -->
        <test-method status="PASS" signature="coneSetCentreDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneSetCentreDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneSetCentreDot -->
        <test-method status="PASS" signature="coneSetRadDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneSetRadDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneSetRadDot -->
        <test-method status="PASS" signature="coneSetTopDot()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeTest@2f8f11]" name="coneSetTopDot" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coneSetTopDot -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.ConeTest -->
      <class name="by.epam.javatraining.halavin.taskone.test.ConeMethodsTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="beforeClass" is-config="true" duration-ms="31" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="getSpaceRatio()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSpaceRatio" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpaceRatio -->
        <test-method status="PASS" signature="getSpaceRatioTestNotCone()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSpaceRatioTestNotCone" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[Input figure isn't cone.]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: Input figure isn't cone.
at by.epam.javatraining.halavin.taskone.lib.service.MethodsForConeService.getSpaceRatio(MethodsForConeService.java:105)
at by.epam.javatraining.halavin.taskone.test.ConeMethodsTest.getSpaceRatioTestNotCone(ConeMethodsTest.java:127)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpaceRatioTestNotCone -->
        <test-method status="PASS" signature="getSpaceRatioTestPlateException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSpaceRatioTestPlateException" duration-ms="0" started-at="2018-12-15T20:26:37Z" finished-at="2018-12-15T20:26:37Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[There isn't any coordinate plate that can cross input cone]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: There isn't any coordinate plate that can cross input cone
at by.epam.javatraining.halavin.taskone.lib.service.MethodsForConeService.getSpaceRatio(MethodsForConeService.java:132)
at by.epam.javatraining.halavin.taskone.test.ConeMethodsTest.getSpaceRatioTestPlateException(ConeMethodsTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpaceRatioTestPlateException -->
        <test-method status="PASS" signature="getSpaceTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSpaceTest" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpaceTest -->
        <test-method status="PASS" signature="getSquareTest()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSquareTest" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSquareTest -->
        <test-method status="PASS" signature="getSpaceTestException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSpaceTestException" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[Input figure isn't cone.]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: Input figure isn't cone.
at by.epam.javatraining.halavin.taskone.lib.service.MethodsForConeService.getSpace(MethodsForConeService.java:39)
at by.epam.javatraining.halavin.taskone.test.ConeMethodsTest.getSpaceTestException(ConeMethodsTest.java:92)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpaceTestException -->
        <test-method status="PASS" signature="getSquareTestException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="getSquareTestException" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[Input figure isn't cone.]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: Input figure isn't cone.
at by.epam.javatraining.halavin.taskone.lib.service.MethodsForConeService.getSquare(MethodsForConeService.java:17)
at by.epam.javatraining.halavin.taskone.test.ConeMethodsTest.getSquareTestException(ConeMethodsTest.java:76)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSquareTestException -->
        <test-method status="PASS" signature="isConeTestFalse()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="isConeTestFalse" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isConeTestFalse -->
        <test-method status="PASS" signature="isConeTestTrue()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="isConeTestTrue" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isConeTestTrue -->
        <test-method status="PASS" signature="isCoorPlaneException()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="isCoorPlaneException" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <exception class="by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException">
            <message>
              <![CDATA[Input figure isn't cone.]]>
            </message>
            <full-stacktrace>
              <![CDATA[by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException: Input figure isn't cone.
at by.epam.javatraining.halavin.taskone.lib.service.MethodsForConeService.isCoorPlane(MethodsForConeService.java:83)
at by.epam.javatraining.halavin.taskone.test.ConeMethodsTest.isCoorPlaneException(ConeMethodsTest.java:117)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- by.epam.javatraining.halavin.taskone.lib.service.exception.ServiceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCoorPlaneException -->
        <test-method status="PASS" signature="isCoorPlaneFalse()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="isCoorPlaneFalse" duration-ms="16" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCoorPlaneFalse -->
        <test-method status="PASS" signature="isCoorPlaneTrue()[pri:0, instance:by.epam.javatraining.halavin.taskone.test.ConeMethodsTest@17e2f02]" name="isCoorPlaneTrue" duration-ms="0" started-at="2018-12-15T20:26:38Z" finished-at="2018-12-15T20:26:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCoorPlaneTrue -->
      </class> <!-- by.epam.javatraining.halavin.taskone.test.ConeMethodsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
